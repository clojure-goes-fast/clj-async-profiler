version: 2.1

defaults: &defaults
  working_directory: ~/project

executors:
  jdk8:
    docker:
      - image: clojure:temurin-8-noble
    <<: *defaults
  jdk11:
    docker:
      - image: clojure:temurin-11-noble
    <<: *defaults
  jdk17:
    docker:
      - image: clojure:temurin-17-noble
    <<: *defaults
  jdk21:
    docker:
      - image: clojure:temurin-21-noble
    <<: *defaults
  jdk23:
    docker:
      - image: clojure:temurin-23-noble
    <<: *defaults
  jdk8-alpine:
    docker:
      - image: clojure:temurin-8-alpine
    <<: *defaults
  jdk21-alpine:
    docker:
      - image: clojure:temurin-21-alpine
    <<: *defaults

commands:
  with_cache:
    parameters:
      steps:
        type: steps
      cache_key:
        description: Will be used as part of the cache key
        type: string
    steps:
      - run:
          name: Generate cache checksum
          command: |
            for file in deps.edn project.clj
            do
              find . -name $file -exec cat {} +
            done | sha256sum | awk '{print $1}' > /tmp/clojure_cache_seed
      - restore_cache:
          key: cache-<< parameters.cache_key >>-{{ checksum "/tmp/clojure_cache_seed" }}
      - steps: << parameters.steps >>
      - save_cache:
          paths:
            - ~/.m2
            - ~/.gitlibs
            - .cpcache
          key: cache-<< parameters.cache_key >>-{{ checksum "/tmp/clojure_cache_seed" }}

jobs:
  test:
    parameters:
      jdk_version:
        type: string
      is_alpine:
        type: boolean
        default: false
      test_flamebin:
        type: boolean
        default: false
    executor: << parameters.jdk_version >>
    steps:
      - checkout
      - when:
          condition: << parameters.is_alpine >>
          steps:
            - run: apk add --no-cache libstdc++
      - with_cache:
          cache_key: "test_v1"
          steps:
            - run: clojure -T:build javac
            - run: CLOJURE_VERSION=1.10 clojure -X:1.10:test
            - run: CLOJURE_VERSION=1.11 clojure -X:1.11:test
            - run: CLOJURE_VERSION=1.12 TEST_FLAMEBIN=<< parameters.test_flamebin >> clojure -X:1.12:test

  deploy:
    executor: jdk8
    steps:
      - checkout
      - run:
         name: Deploy
         command: clojure -T:build deploy :version \"$CIRCLE_TAG\"

run_always: &run_always
  filters:
    branches:
      only: /.*/
    tags:
      only: /.*/

workflows:
  run_all:
    jobs:
      - test:
          matrix:
            parameters:
              jdk_version: [jdk8, jdk11, jdk17, jdk21]
          <<: *run_always
      - test:
          matrix:
            alias: "test-alpine"
            parameters:
              jdk_version: [jdk8-alpine, jdk21-alpine]
              is_alpine: [true]
          <<: *run_always
      - test:
          matrix:
            alias: "test-with-flamebin"
            parameters:
              jdk_version: [jdk23]
              test_flamebin: [true]
          <<: *run_always
      - deploy:
          requires:
            - test
            - test-alpine
            - test-with-flamebin
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+(-\w+)?/
